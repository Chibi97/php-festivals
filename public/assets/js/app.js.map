{"version":3,"sources":["js/app.js","js/map.js","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":["boot","map","Map","window","addEventListener","SPEED","markers","document","querySelectorAll","position","length","animate","next","marker","classList","add","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;;;;;AAEA,SAASA,IAAT,GAAgB;AACZ,QAAIC,MAAM,IAAIC,aAAJ,EAAV;AAEH,C,CAND;;;AAQAC,OAAOC,gBAAP,CAAwB,kBAAxB,EAA4CJ,IAA5C;;;;;;;;;;;;;;ACRA,IAAMK,QAAQ,GAAd;;IAEqBH,G;AACjB,mBAAc;AAAA;;AACV,aAAKI,OAAL,GAAeC,SAASC,gBAAT,CAA0B,cAA1B,CAAf;AACA,aAAKC,QAAL,GAAgB,CAAhB;AACA,YAAG,KAAKH,OAAL,CAAaI,MAAb,GAAsB,CAAzB,EAA4B;AACxB,iBAAKC,OAAL,CAAa,KAAKC,IAAL,EAAb;AACH;AACJ;;;;+BAEM;AACH,mBAAO,KAAKN,OAAL,CAAa,KAAKG,QAAL,EAAb,CAAP;AACH;;;gCAEOI,M,EAAQ;AAAA;;AACZ,gBAAG,CAACA,MAAJ,EAAY;;AAEZA,mBAAOC,SAAP,CAAiBC,GAAjB,CAAqB,QAArB;;AAEAC,uBAAW;AAAA,uBAAM,MAAKL,OAAL,CAAa,MAAKC,IAAL,EAAb,CAAN;AAAA,aAAX,EAA4CP,KAA5C;AACH;;;;;;kBAnBgBH,G;;;;;;;ACFrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../public/assets/js/app.js","sourcesContent":["// Main JS file\nimport Map from \"./map.js\";\n\nfunction boot() {\n    let map = new Map();\n    \n}\n\nwindow.addEventListener('DOMContentLoaded', boot);","const SPEED = 150\n\nexport default class Map {\n    constructor() {\n        this.markers = document.querySelectorAll('.circle-star')\n        this.position = 0\n        if(this.markers.length > 0) {\n            this.animate(this.next())\n        }\n    }\n\n    next() {\n        return this.markers[this.position++]\n    }\n\n    animate(marker) {\n        if(!marker) return;\n\n        marker.classList.add('active');\n\n        setTimeout(() => this.animate(this.next()), SPEED)\n    }\n}","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}