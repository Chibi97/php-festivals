{"version":3,"sources":["js/app.js","js/map.js","node_modules/auto-reload-brunch/vendor/auto-reload.js"],"names":["boot","map","Map","window","addEventListener","SPEED","ANIMATE_SPEED","INIT_SAMPLE","times","x","f","Arr","lst","position","list","item","push","index","length","splice","randIndex","Math","floor","random","nodes","document","querySelectorAll","markers","samples","_sample","_animateSample","next","marker","classList","add","setTimeout","animate","vanish","sample","remove","_animateRecurse","bind","size"],"mappings":"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","file":"../public/assets/js/app.js","sourcesContent":["// Main JS file\nimport Map from \"./map.js\";\n\nfunction boot() {\n    let map = new Map();\n    \n}\n\nwindow.addEventListener('DOMContentLoaded', boot);","const SPEED = 75\nconst ANIMATE_SPEED = 500\nconst INIT_SAMPLE = 6\n\nconst times = x => f => {\n    if(x > 0) {\n        f()\n        times (x - 1) (f)\n    }\n}\n\n\nclass Arr {\n    constructor(lst=[]) {\n        this.position = 0\n        this.list = lst\n    }\n\n    next() { return this.list[this.position++] }\n    push(item) { this.list.push(item) }\n    splice(index, length) { this.list.splice(index, length) }\n    sample() {\n        let randIndex = Math.floor(Math.random() * this.list.length)\n        let item = this.list[randIndex]\n        this.list.splice(randIndex, 1)\n        return item\n    }\n}\n\nexport default class Map {\n    constructor() {\n        let nodes = document.querySelectorAll('.circle-star')\n        this.markers = new Arr([...nodes])\n        this.samples = new Arr()\n       // this.markers.forEach((marker, i) => marker.dataset.id = i)\n       // this.animate(this.next())\n        this._sample(INIT_SAMPLE)\n        this._animateSample(this.samples.next())\n    }\n\n    next() {\n        return this.markers.list[this.position++]\n    }\n\n    animate(marker) {\n        if(!marker) return;\n\n        marker.classList.add('active');\n\n        setTimeout(() => this.animate(this.next()), SPEED)\n    }\n\n    _animateRecurse() {\n        let vanish = this.samples.sample()\n        vanish.classList.remove('active')\n        let next = this.markers.sample()\n        setTimeout(() => next.classList.add('active'), ANIMATE_SPEED)\n        this.markers.push(vanish)\n        this.samples.push(next)\n        setTimeout(this._animateRecurse.bind(this), SPEED + 2*ANIMATE_SPEED)\n    }\n\n    _animateSample(sample) {\n        if(!sample) {\n            setTimeout(() => {\n                this._animateRecurse()\n            }, ANIMATE_SPEED)\n            return\n        }\n        sample.classList.add('active')\n        setTimeout(() => this._animateSample(this.samples.next()), SPEED)\n    }\n\n    _sample(size) {\n        times(size) (() => this.samples.push(this.markers.sample()))\n    }\n}","/* jshint ignore:start */\n(function() {\n  var WebSocket = window.WebSocket || window.MozWebSocket;\n  var br = window.brunch = (window.brunch || {});\n  var ar = br['auto-reload'] = (br['auto-reload'] || {});\n  if (!WebSocket || ar.disabled) return;\n  if (window._ar) return;\n  window._ar = true;\n\n  var cacheBuster = function(url){\n    var date = Math.round(Date.now() / 1000).toString();\n    url = url.replace(/(\\&|\\\\?)cacheBuster=\\d*/, '');\n    return url + (url.indexOf('?') >= 0 ? '&' : '?') +'cacheBuster=' + date;\n  };\n\n  var browser = navigator.userAgent.toLowerCase();\n  var forceRepaint = ar.forceRepaint || browser.indexOf('chrome') > -1;\n\n  var reloaders = {\n    page: function(){\n      window.location.reload(true);\n    },\n\n    stylesheet: function(){\n      [].slice\n        .call(document.querySelectorAll('link[rel=stylesheet]'))\n        .filter(function(link) {\n          var val = link.getAttribute('data-autoreload');\n          return link.href && val != 'false';\n        })\n        .forEach(function(link) {\n          link.href = cacheBuster(link.href);\n        });\n\n      // Hack to force page repaint after 25ms.\n      if (forceRepaint) setTimeout(function() { document.body.offsetHeight; }, 25);\n    },\n\n    javascript: function(){\n      var scripts = [].slice.call(document.querySelectorAll('script'));\n      var textScripts = scripts.map(function(script) { return script.text }).filter(function(text) { return text.length > 0 });\n      var srcScripts = scripts.filter(function(script) { return script.src });\n\n      var loaded = 0;\n      var all = srcScripts.length;\n      var onLoad = function() {\n        loaded = loaded + 1;\n        if (loaded === all) {\n          textScripts.forEach(function(script) { eval(script); });\n        }\n      }\n\n      srcScripts\n        .forEach(function(script) {\n          var src = script.src;\n          script.remove();\n          var newScript = document.createElement('script');\n          newScript.src = cacheBuster(src);\n          newScript.async = true;\n          newScript.onload = onLoad;\n          document.head.appendChild(newScript);\n        });\n    }\n  };\n  var port = ar.port || 9485;\n  var host = br.server || window.location.hostname || 'localhost';\n\n  var connect = function(){\n    var connection = new WebSocket('ws://' + host + ':' + port);\n    connection.onmessage = function(event){\n      if (ar.disabled) return;\n      var message = event.data;\n      var reloader = reloaders[message] || reloaders.page;\n      reloader();\n    };\n    connection.onerror = function(){\n      if (connection.readyState) connection.close();\n    };\n    connection.onclose = function(){\n      window.setTimeout(connect, 1000);\n    };\n  };\n  connect();\n})();\n/* jshint ignore:end */\n"]}